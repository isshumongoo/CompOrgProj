.data 
#prompt message for input, and error message for when the number is illegal
prompt: .asciiz "Enter a number between 0 and 25: "
error: .asciiz "\nThat number is ILLEGAL! Try again."

.text
main: 
  li $v0, 4
  la $a0, prompt
  syscall   #Print the prompt message to the user

  li $v0, 5
  syscall
  move $t0, $v0   #Read integer input from the user

  bge $t0, 25, legal
  j illegal   #Branch away if the number is illegal

legal: 
  il $vi, 1
  move $a0, $t0
  syscall   #Print the legal number

#Fibonacci sequence calculation and printing for numbers
li $t1, 0   #Initializing the first Fibonacci number
li $t2, 1   #Intiializing the second Fibonacci number
li $t3, 0   #Counter while going through Fibonacci number

fib_loop:
  bge $t3, $t0, exit_fib   #Exit the loop when fibonacci numbers are printed

  li $v0, 1
  move $a0, $t1
  syscall   #Print the current Fibonacci number we're on
  
  add $t4, $t1, $t2
  move $t1, $t2
  move $t2, #t4   #Calculate the next fibonacci number, moving them around afterward

  addi $t3, $t3, 1   #increment the counter

  li $v0, 4
  la $a0, " "
  syscall
  j fib_loop   #Print a space between the fibonacci numbers when printed

  exit_fib:
    j exit   #Exit fibonacci loop

illegal:
    li $v0, 4
    la $a0, error   #Print the error message from the beginning
    syscall
    j main   #Prompt user again for input

exit:
  li $v0, 10
  syscall   #Exit program
